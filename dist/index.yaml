# PreQL Standard Types Library
# Copyright (c) Jonathan M. Wilbur 2019. Released under an MIT License.
# Do not edit this file. Modify files in ./source, then run 'make' instead.
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: ureal16
  namespace: default
  labels:
    preql.tech/fullSingularName: '16-Bit Unsigned Floating-Point Number'
    preql.tech/fullPluralName: '16-Bit Unsigned Floating-Point Numbers'
    preql.tech/standard: 'true'
    preql.tech/category: 'FloatingPoint'
    preql.tech/storageSizeInBytes: '2'
    preql.tech/bits: '16'
    preql.tech/signed: 'false'
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'An unsigned floating-point number that can be encoded on 16 bits.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '3.45'
spec:
  jsonEquivalent: 'number'
  targets:
    bson:
      nativeType: 'number'
    cql:
      nativeType: 'float'
    elasticsearch:
      nativeType: 'float'
    json:
      nativeType: 'number'
    mariadb:
      nativeType: 'FLOAT UNSIGNED'
    mysql:
      nativeType: 'FLOAT UNSIGNED'
    # Unfortunately, OpenLDAP does not seem to support the ASN.1 REAL
    # type for whatever reason, so we have to use a string type to
    # represent numbers that can be non-integral, such as:
    # - 123
    # - 1.23
    # - 1.23 * 10^-1
    # - 1.23E-1
    # - +4.56
    # - Infinity
    # - -Infinity
    # - NaN
    # - 5 + 3i
    # - PI
    # - 5 / 3
    #
    # Hence, I have chosen PrintableString.
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.44'
      ldapMatchingRule: 'caseIgnoreIA5Match'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'real'
    sqlite:
      nativeType: 'REAL'
    tsql:
      nativeType: 'float'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: bsonId
  namespace: default
  labels:
    preql.tech/fullSingularName: 'BSON Object Identifier'
    preql.tech/fullPluralName: 'BSON Object Identifiers'
    preql.tech/standard: 'true'
    preql.tech/category: 'Identifiers'
    preql.tech/storageSizeInBytes: '12'
    preql.tech/bits: '96'
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'BSON Object Identifier, as used in MongoDB.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    preql.tech/definingSpecificationURI: 'https://docs.mongodb.com/manual/reference/method/ObjectId/'
    preql.tech/exampleValue: '9c1b4584b987d6d3bebdbd27'
spec:
  jsonEquivalent: 'string'
  minLength: 24
  maxLength: 24
  regexes:
    pcre:
      bsonId:
        - pattern: '^[0-9A-Fa-f]{24}'
          positive: True
  setters:
    - type: 'case'
      casing: 'upper'
  targets:
    bson:
      nativeType: 'objectId'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'keyword'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'CHAR(24)'
    mysql:
      nativeType: 'CHAR(24)'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.15'
      ldapMatchingRule: 'caseIgnoreMatch'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
      ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'CHAR(24 CHAR)'
    postgresql:
      nativeType: 'char(24)'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'CHAR(24)'---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: eui
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: oid
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Object Identifier'
    preql.tech/fullPluralName: 'Object Identifiers'
    preql.tech/standard: 'true'
    preql.tech/category: 'Identifiers'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: >
      'A sequence of unsigned integers that describe a universal hierarchy of '
      'objects. Usually represented as a unsigned integers joined by periods.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '1.3.6.1.1.16.1'
spec:
  jsonEquivalent: 'string'
  minLength: 1
  maxLength: 128
  regexes:
    pcre:
      oid:
        - pattern: '^[0-2](?:\\.(0|(?:[1-9]\\d?))(\\.(0|(?:[1-9]\\d*)))*)?'
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'keyword'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'VARCHAR(128)'
    mysql:
      nativeType: 'VARCHAR(128)'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.38'
      ldapMatchingRule: 'objectIdentifierMatch'
    plsql:
      nativeType: 'VARCHAR2(128 CHAR)'
    postgresql:
      nativeType: 'varchar(128)'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'NVARCHAR(128)'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: datetime
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Datetime'
    preql.tech/fullPluralName: 'Datetimes'
    preql.tech/standard: 'true'
    preql.tech/category: 'Time'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A date and time.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '2019-07-06T17:53:23'
spec:
  jsonEquivalent: 'string'
  targets:
    bson:
      nativeType: 'date'
    cql:
      nativeType: 'timestamp'
    elasticsearch:
      nativeType: 'date'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'DATETIME'
    mysql:
      nativeType: 'DATETIME'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.24'
      ldapMatchingRule: 'generalizedTimeMatch'
      ldapOrderingRule: 'generalizedTimeOrderingMatch'
    plsql:
      nativeType: 'DATE'
    postgresql:
      nativeType: 'timestamp'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'datetime2'

---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: eyeColor
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: usZip9
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: handle
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: sint32
  namespace: default
  labels:
    preql.tech/fullSingularName: '32-Bit Signed Integer'
    preql.tech/fullPluralName: '32-Bit Signed Integers'
    preql.tech/standard: 'true'
    preql.tech/category: 'Integer'
    preql.tech/storageSizeInBytes: '4'
    preql.tech/bits: '32'
    preql.tech/signed: 'true'
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A signed integer that can range between -2,147,483,648 and 2,147,483,647.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '-32,760'
spec:
  jsonEquivalent: 'integer'
  minimum: -2147483648
  maximum: 2147483647
  targets:
    bson:
      nativeType: 'integer'
    cql:
      nativeType: 'int'
    elasticsearch:
      nativeType: 'integer'
    json:
      nativeType: 'integer'
    mariadb:
      nativeType: 'INTEGER'
    mysql:
      nativeType: 'INTEGER'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.27'
      ldapMatchingRule: 'integerMatch'
      ldapOrderingRule: 'integerOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'integer'
    sqlite:
      nativeType: 'INTEGER'
    tsql:
      nativeType: 'integer'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: boolean
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Boolean'
    preql.tech/fullPluralName: 'Booleans'
    preql.tech/standard: 'true'
    preql.tech/category: 'Integral'
    preql.tech/storageSizeInBytes: '1'
    preql.tech/bits: '1'
    preql.tech/signed: 'false'
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A value that can either be True or False, Yes or No, One or Zero.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    preql.tech/exampleValue: '1'
spec:
  jsonEquivalent: 'boolean'
  targets:
    bson:
      nativeType: 'boolean'
    cql:
      nativeType: 'Boolean'
    elasticsearch:
      nativeType: 'boolean'
    json:
      nativeType: 'boolean'
    mariadb:
      nativeType: 'BOOLEAN'
    mysql:
      nativeType: 'BOOLEAN'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.7'
      ldapMatchingRule: 'booleanMatch'
    plsql:
      nativeType: 'BOOLEAN'
    postgresql:
      nativeType: 'BOOLEAN'
    sqlite:
      nativeType: 'INTEGER'
    tsql:
      nativeType: 'BIT'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: uriSchema
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: dn
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: uri
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Uniform Resource Identifier'
    preql.tech/fullPluralName: 'Uniform Resource Identifiers'
    preql.tech/standard: 'true'
    preql.tech/category: 'Identifiers'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    # preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    preql.tech/definingSpecification: 'IETF RFC 3986'
    preql.tech/definingSpecificationURI: 'https://tools.ietf.org/html/rfc3986'
    preql.tech/exampleValue: 'https://github.com/JonathanWilbur'
spec:
  jsonEquivalent: 'string'
  minLength: 1
  # Though a URI has no length limitation, 512 is really large and is still
  # within a length that permits indexing for most relational DBMSs.
  maxLength: 512
  regexes:
    pcre:
      url:
      # Source: http://jmrware.com/articles/2009/uri_regexp/URI_regex.html
      - pattern: >-
          [A-Za-z][A-Za-z0-9+\-.]*:(?:(?:(?:[A-Za-z0-9\-._~!$&'()*+,;=:]|%[0-9A-Fa-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9A-Fa-f]{1,4}:){6}|::(?:[0-9A-Fa-f]{1,4}:){5}|(?:[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,1}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){3}|(?:(?:[0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){2}|(?:(?:[0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:|(?:(?:[0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})?::)(?:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(?:(?:[0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})?::)|[Vv][0-9A-Fa-f]+\.[A-Za-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|(?:[A-Za-z0-9\-._~!$&'()*+,;=]|%[0-9A-Fa-f]{2})*)(?::[0-9]*)?(?:/(?:[A-Za-z0-9\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|/(?:(?:[A-Za-z0-9\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:/(?:[A-Za-z0-9\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*)?|(?:[A-Za-z0-9\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:/(?:[A-Za-z0-9\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|)(?:\?(?:[A-Za-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9A-Fa-f]{2})*)?(?:\#(?:[A-Za-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9A-Fa-f]{2})*)?
        positive: True
  setters:
    - type: 'case'
      casing: 'lower'
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'keyword'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'VARCHAR(512)'
    mysql:
      nativeType: 'VARCHAR(512)'
    openldap:
      # TODO: REVIEW: Make this IA5String?
      nativeType: '1.3.6.1.4.1.1466.115.121.1.15'
      ldapMatchingRule: 'caseIgnoreMatch'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
      ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'VARCHAR2(512 CHAR)'
    postgresql:
      nativeType: 'varchar(512)'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'VARCHAR(512)'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: rdn
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: xml
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: hexchar16
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: uint64
  namespace: default
  labels:
    preql.tech/fullSingularName: '64-Bit Unsigned Integer'
    preql.tech/fullPluralName: '64-Bit Unsigned Integers'
    preql.tech/standard: 'true'
    preql.tech/category: 'Integer'
    preql.tech/storageSizeInBytes: '8'
    preql.tech/bits: '64'
    preql.tech/signed: 'false'
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'An unsigned integer that can range between 0 and 18,446,744,073,709,551,615.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '12345'
spec:
  jsonEquivalent: 'integer'
  minimum: 0
  maximum: 18446744073709551615
  targets:
    bson:
      nativeType: 'integer'
    cql:
      nativeType: 'int'
    elasticsearch:
      nativeType: 'integer'
    json:
      nativeType: 'integer'
    mariadb:
      nativeType: 'BIGINT UNSIGNED'
    mysql:
      nativeType: 'BIGINT UNSIGNED'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.27'
      ldapMatchingRule: 'integerMatch'
      ldapOrderingRule: 'integerOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: usZip5
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: unc
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: latitude
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: sex
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: mimeType
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: pixelColor
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: uint32
  namespace: default
  labels:
    preql.tech/fullSingularName: '32-Bit Unsigned Integer'
    preql.tech/fullPluralName: '32-Bit Unsigned Integers'
    preql.tech/standard: 'true'
    preql.tech/category: 'Integer'
    preql.tech/storageSizeInBytes: '4'
    preql.tech/bits: '32'
    preql.tech/signed: 'false'
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'An unsigned integer that can range between 0 and 4,294,967,295.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '12345'
spec:
  jsonEquivalent: 'integer'
  minimum: 0
  maximum: 4294967295
  targets:
    bson:
      nativeType: 'integer'
    cql:
      nativeType: 'int'
    elasticsearch:
      nativeType: 'integer'
    json:
      nativeType: 'integer'
    mariadb:
      nativeType: 'INTEGER UNSIGNED'
    mysql:
      nativeType: 'INTEGER UNSIGNED'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.27'
      ldapMatchingRule: 'integerMatch'
      ldapOrderingRule: 'integerOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'bigint'
    sqlite:
      nativeType: 'INTEGER'
    tsql:
      nativeType: 'bigint'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: dnsLabel
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: tlsCipher
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: iso3166-1
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: sint64
  namespace: default
  labels:
    preql.tech/fullSingularName: '64-Bit Signed Integer'
    preql.tech/fullPluralName: '64-Bit Signed Integers'
    preql.tech/standard: 'true'
    preql.tech/category: 'Integer'
    preql.tech/storageSizeInBytes: '8'
    preql.tech/bits: '64'
    preql.tech/signed: 'true'
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A signed integer that can range between -9223372036854775808 and 9223372036854775807.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '-32,760'
spec:
  jsonEquivalent: 'integer'
  minimum: -9223372036854775808
  maximum: 9223372036854775807
  targets:
    bson:
      nativeType: 'integer'
    cql:
      nativeType: 'int'
    elasticsearch:
      nativeType: 'integer'
    json:
      nativeType: 'integer'
    mariadb:
      nativeType: 'BIGINT'
    mysql:
      nativeType: 'BIGINT'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.27'
      ldapMatchingRule: 'integerMatch'
      ldapOrderingRule: 'integerOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'bigint'
    sqlite:
      nativeType: 'INTEGER'
    tsql:
      nativeType: 'bigint'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: date
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Date'
    preql.tech/fullPluralName: 'Dates'
    preql.tech/standard: 'true'
    preql.tech/category: 'Time'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A year, month, and day that identifies a specific day, usually on the Gregorian calendar.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '2019-07-26'
spec:
  jsonEquivalent: 'string'
  targets:
    bson:
      nativeType: 'date'
    cql:
      # TODO: Review this.
      nativeType: 'timestamp'
    elasticsearch:
      nativeType: 'date'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'DATE'
    mysql:
      nativeType: 'DATE'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.24'
      ldapMatchingRule: 'generalizedTimeMatch'
      ldapOrderingRule: 'generalizedTimeOrderingMatch'
    plsql:
      nativeType: 'DATE'
    postgresql:
      nativeType: 'date'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'date'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: second
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Second'
    preql.tech/fullPluralName: 'Seconds'
    preql.tech/standard: 'true'
    preql.tech/category: 'Time'
    preql.tech/storageSizeInBytes: '1'
    preql.tech/bits: '8'
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A second within a 60-second minute.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '15'
spec:
  jsonEquivalent: 'integer'
  minimum: 0
  maximum: 59
  targets:
    bson:
      nativeType: 'integer'
    cql:
      nativeType: 'int'
    elasticsearch:
      nativeType: 'integer'
    json:
      nativeType: 'integer'
    mariadb:
      nativeType: 'TINYINT UNSIGNED'
    mysql:
      nativeType: 'TINYINT UNSIGNED'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.27'
      ldapMatchingRule: 'integerMatch'
      ldapOrderingRule: 'integerOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'smallint'
    sqlite:
      nativeType: 'INTEGER'
    tsql:
      nativeType: 'smallint'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: ticker
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: unixFileName
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: leftRight
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: month
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: varchar32
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Variable-length 32-character string'
    preql.tech/fullPluralName: 'Variable-length 32-character strings'
    preql.tech/standard: 'true'
    preql.tech/category: 'String'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A string that can contain up to 32 characters.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: 'ERROR_TCP_CONNECTION_WAS_RESET'
spec:
  jsonEquivalent: 'string'
  minLength: 0
  maxLength: 32
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'keyword'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'VARCHAR(32)'
    mysql:
      nativeType: 'VARCHAR(32)'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.15'
      ldapMatchingRule: 'caseIgnoreMatch'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
      ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'VARCHAR2(32 CHAR)'
    postgresql:
      nativeType: 'varchar(32)'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'NVARCHAR(32)'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: text24
  namespace: default
  labels:
    preql.tech/fullSingularName: '24-bit Length Indicator Text'
    preql.tech/fullPluralName: '24-bit Length Indicator Text'
    preql.tech/standard: 'true'
    preql.tech/category: 'String'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'Variable-length string whose length is indicated by an 24-bit unsigned integer.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: 'Hello world!'
spec:
  jsonEquivalent: 'string'
  minLength: 0
  maxLength: 16777215
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'text'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'MEDIUMTEXT'
    mysql:
      nativeType: 'MEDIUMTEXT'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.15'
      ldapMatchingRule: 'caseIgnoreMatch'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
      ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'LONG'
    postgresql:
      nativeType: 'text'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'ntext'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: locale
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: iso639
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: text32
  namespace: default
  labels:
    preql.tech/fullSingularName: '32-bit Length Indicator Text'
    preql.tech/fullPluralName: '32-bit Length Indicator Text'
    preql.tech/standard: 'true'
    preql.tech/category: 'String'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'Variable-length string whose length is indicated by an 32-bit unsigned integer.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: 'Hello world!'
spec:
  jsonEquivalent: 'string'
  minLength: 0
  maxLength: 4294967295
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'text'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'LONGTEXT'
    mysql:
      nativeType: 'LONGTEXT'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.15'
      ldapMatchingRule: 'caseIgnoreMatch'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
      ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'LONG'
    postgresql:
      nativeType: 'text'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'ntext'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: ipv4
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Internet Protocol Version 4 Address'
    preql.tech/fullPluralName: 'Internet Protocol Version 4 Addresses'
    preql.tech/standard: 'true'
    preql.tech/category: 'Identifiers'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'An Internet Protocol Version 4 Address.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '127.0.0.1'
spec:
  jsonEquivalent: 'string'
  minLength: 7
  maxLength: 15
  regexes:
    pcre:
      ipv4:
        - pattern: '^(0|(?:1\\d)|(?:1\\d\\d)|(?:2[0-4]\\d)|(?:25[0-5]))(?:\\.(0|(?:1\\d)|(?:1\\d\\d)|(?:2[0-4]\\d)|(?:25[0-5]))){3}'
          positive: True
  setters:
    - type: 'case'
      casing: 'upper'
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'keyword'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'VARCHAR(15)'
    mysql:
      nativeType: 'VARCHAR(15)'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.15'
      ldapMatchingRule: 'caseIgnoreMatch'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
      ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'VARCHAR2(15 CHAR)'
    postgresql:
      nativeType: 'inet'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'VARCHAR(15)'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: upc
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: toml
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: oui
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: unixPath
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: sreal32
  namespace: default
  labels:
    preql.tech/fullSingularName: '32-Bit Signed Floating-Point Number'
    preql.tech/fullPluralName: '32-Bit Signed Floating-Point Numbers'
    preql.tech/standard: 'true'
    preql.tech/category: 'FloatingPoint'
    preql.tech/storageSizeInBytes: '4'
    preql.tech/bits: '32'
    preql.tech/signed: 'true'
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A signed floating-point number that can be encoded on 32 bits.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '-3.2'
spec:
  jsonEquivalent: 'number'
  targets:
    bson:
      nativeType: 'number'
    cql:
      nativeType: 'float'
    elasticsearch:
      nativeType: 'float'
    json:
      nativeType: 'number'
    mariadb:
      nativeType: 'FLOAT SIGNED'
    mysql:
      nativeType: 'FLOAT SIGNED'
    # Unfortunately, OpenLDAP does not seem to support the ASN.1 REAL
    # type for whatever reason, so we have to use a string type to
    # represent numbers that can be non-integral, such as:
    # - 123
    # - 1.23
    # - 1.23 * 10^-1
    # - 1.23E-1
    # - +4.56
    # - Infinity
    # - -Infinity
    # - NaN
    # - 5 + 3i
    # - PI
    # - 5 / 3
    #
    # Hence, I have chosen PrintableString.
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.44'
      ldapMatchingRule: 'caseIgnoreIA5Match'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'real'
    sqlite:
      nativeType: 'REAL'
    tsql:
      nativeType: 'float'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: year
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Year'
    preql.tech/fullPluralName: 'Years'
    preql.tech/standard: 'true'
    preql.tech/category: 'Time'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A specific year on the Gregorian calendar.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '2016'
spec:
  jsonEquivalent: 'integer'
  targets:
    bson:
      nativeType: 'integer'
    cql:
      nativeType: 'int'
    elasticsearch:
      nativeType: 'integer'
    json:
      nativeType: 'integer'
    mariadb:
      nativeType: 'YEAR'
    mysql:
      nativeType: 'YEAR(4)'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.27'
      ldapMatchingRule: 'integerMatch'
      ldapOrderingRule: 'integerOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'smallint'
    sqlite:
      nativeType: 'INTEGER'
    tsql:
      nativeType: 'smallint'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: compass16
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: compass4
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: text8
  namespace: default
  labels:
    preql.tech/fullSingularName: '8-bit Length Indicator Text'
    preql.tech/fullPluralName: '8-bit Length Indicator Text'
    preql.tech/standard: 'true'
    preql.tech/category: 'String'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'Variable-length string whose length is indicated by an 8-bit unsigned integer.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: 'Hello world!'
spec:
  jsonEquivalent: 'string'
  minLength: 0
  maxLength: 255
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'keyword'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'TINYTEXT'
    mysql:
      nativeType: 'TINYTEXT'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.15'
      ldapMatchingRule: 'caseIgnoreMatch'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
      ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'VARCHAR2(255 CHAR)'
    postgresql:
      nativeType: 'varchar(255)'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'NVARCHAR(255)'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: sreal64
  namespace: default
  labels:
    preql.tech/fullSingularName: '64-Bit Signed Floating-Point Number'
    preql.tech/fullPluralName: '64-Bit Signed Floating-Point Numbers'
    preql.tech/standard: 'true'
    preql.tech/category: 'FloatingPoint'
    preql.tech/storageSizeInBytes: '8'
    preql.tech/bits: '64'
    preql.tech/signed: 'true'
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A signed floating-point number that can be encoded on 64 bits.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '-5.607'
spec:
  jsonEquivalent: 'number'
  targets:
    bson:
      nativeType: 'number'
    cql:
      nativeType: 'double'
    elasticsearch:
      nativeType: 'double'
    json:
      nativeType: 'number'
    mariadb:
      nativeType: 'DOUBLE SIGNED'
    mysql:
      nativeType: 'DOUBLE SIGNED'
    # Unfortunately, OpenLDAP does not seem to support the ASN.1 REAL
    # type for whatever reason, so we have to use a string type to
    # represent numbers that can be non-integral, such as:
    # - 123
    # - 1.23
    # - 1.23 * 10^-1
    # - 1.23E-1
    # - +4.56
    # - Infinity
    # - -Infinity
    # - NaN
    # - 5 + 3i
    # - PI
    # - 5 / 3
    #
    # Hence, I have chosen PrintableString.
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.44'
      ldapMatchingRule: 'caseIgnoreIA5Match'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'double precision'
    sqlite:
      nativeType: 'REAL'
    tsql:
      nativeType: 'double'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: sid
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Security Identifier'
    preql.tech/fullPluralName: 'Security Identifiers'
    preql.tech/standard: 'true'
    preql.tech/category: 'Identifiers'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A Security Identifier, as invented by Microsoft.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    preql.tech/definingSpecificationURI: 'https://docs.microsoft.com/en-us/windows/win32/secauthz/security-identifiers'
    preql.tech/exampleValue: 'S-1-5-9'
spec:
  jsonEquivalent: 'string'
  minLength: 6
  maxLength: 128
  regexes:
    pcre:
      sid:
        - pattern: '^S-\\d-\\d+(-\\d+)+'
          positive: True
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'keyword'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'VARCHAR(128)'
    mysql:
      nativeType: 'VARCHAR(128)'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.44'
      ldapMatchingRule: 'caseIgnoreMatch'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
      ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'VARCHAR(128 CHAR)'
    postgresql:
      nativeType: 'varchar(128)'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'NVARCHAR(128)'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: binchar16
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: isbn
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: decchar8
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: httpCode
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: iupacName
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: ssn
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: decchar16
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: money
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Money'
    preql.tech/fullPluralName: 'Monies'
    preql.tech/standard: 'true'
    preql.tech/category: 'Money'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    preql.tech/signed: 'true'
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A representation of a quantity of money.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '25.10'
spec:
  jsonEquivalent: 'number'
  targets:
    bson:
      nativeType: 'number'
    cql:
      nativeType: 'double'
    elasticsearch:
      nativeType: 'double'
    json:
      nativeType: 'number'
    mariadb:
      nativeType: 'DOUBLE SIGNED'
    mysql:
      nativeType: 'DOUBLE SIGNED'
    # Unfortunately, OpenLDAP does not seem to support the ASN.1 REAL
    # type for whatever reason, so we have to use a string type to
    # represent numbers that can be non-integral, such as:
    # - 123
    # - 1.23
    # - 1.23 * 10^-1
    # - 1.23E-1
    # - +4.56
    # - Infinity
    # - -Infinity
    # - NaN
    # - 5 + 3i
    # - PI
    # - 5 / 3
    #
    # Hence, I have chosen PrintableString.
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.44'
      ldapMatchingRule: 'caseIgnoreIA5Match'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'double precision'
    sqlite:
      nativeType: 'REAL'
    tsql:
      # Even though Transact-SQL has a 'money' data type, this StackOverflow
      # answer should talk you out of ever using it:
      # https://stackoverflow.com/questions/582797/should-you-choose-the-money-or-decimalx-y-datatypes-in-sql-server
      nativeType: 'double'

---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: compass8
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: iri
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Internationalized Resource Identifier'
    preql.tech/fullPluralName: 'Internationalized Resource Identifiers'
    preql.tech/standard: 'true'
    preql.tech/category: 'Identifiers'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    # preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    preql.tech/definingSpecification: 'IETF RFC 3987'
    preql.tech/definingSpecificationURI: 'https://tools.ietf.org/html/rfc3987'
    preql.tech/exampleValue: 'https://github.com/JonathanWilbur'
spec:
  jsonEquivalent: 'string'
  minLength: 1
  # Though a IRI has no length limitation, 512 is really large and is still
  # within a length that permits indexing for most relational DBMSs.
  maxLength: 512
  regexes:
    pcre:
      iri:
      # Source: https://stackoverflow.com/a/190405/6562635
      - pattern: >-
          ^[a-z](?:[-a-z0-9\+\.])*:(?:\/\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:])*@)?(?:\[(?:(?:(?:[0-9a-f]{1,4}:){6}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|::(?:[0-9a-f]{1,4}:){5}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|v[0-9a-f]+\.[-a-z0-9\._~!\$&'\(\)\*\+,;=:]+)\]|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3}|(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=])*)(?::[0-9]*)?(?:\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@]))*)*|\/(?:(?:(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@]))+)(?:\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@]))*)*)?|(?:(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@]))+)(?:\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@]))*)*|(?!(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@])))(?:\?(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@])|[\x{E000}-\x{F8FF}\x{F0000}-\x{FFFFD}\x{100000}-\x{10FFFD}\/\?])*)?(?:\#(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@])|[\/\?])*)?
        positive: True
  setters:
    - type: 'case'
      casing: 'lower'
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'keyword'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'VARCHAR(512)'
    mysql:
      nativeType: 'VARCHAR(512)'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.15'
      ldapMatchingRule: 'caseIgnoreMatch'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
      ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'VARCHAR2(512 CHAR)'
    postgresql:
      nativeType: 'varchar(512)'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'NVARCHAR(512)'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: windowsPath
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: chemicalFormula
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: blob32
  namespace: default
  labels:
    preql.tech/fullSingularName: '32-bit Length Indicator Blob'
    preql.tech/fullPluralName: '32-bit Length Indicator Blobs'
    preql.tech/standard: 'true'
    preql.tech/category: 'Binary'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'Variable-length bytes array whose length is indicated by an 32-bit unsigned integer.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    # preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  minLength: 0
  maxLength: 4294967295
  targets:
    bson:
      nativeType: 'binData'
    cql:
      nativeType: 'blob'
    elasticsearch:
      nativeType: 'binary'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'BLOB'
    mysql:
      nativeType: 'BLOB'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.40'
      ldapMatchingRule: 'octetStringMatch'
      ldapOrderingRule: 'octetStringOrderingMatch'
    plsql:
      nativeType: 'BLOB'
    postgresql:
      nativeType: 'bytea'
    sqlite:
      nativeType: 'BLOB'
    tsql:
      nativeType: 'binary'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: windowsFileName
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: hour
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Hour'
    preql.tech/fullPluralName: 'Hour'
    preql.tech/standard: 'true'
    preql.tech/category: 'Time'
    preql.tech/storageSizeInBytes: '1'
    preql.tech/bits: '8'
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'An hour on the 24-hour clock.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '15'
spec:
  jsonEquivalent: 'integer'
  minimum: 0
  maximum: 23
  targets:
    bson:
      nativeType: 'integer'
    cql:
      nativeType: 'int'
    elasticsearch:
      nativeType: 'integer'
    json:
      nativeType: 'integer'
    mariadb:
      nativeType: 'TINYINT UNSIGNED'
    mysql:
      nativeType: 'TINYINT UNSIGNED'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.27'
      ldapMatchingRule: 'integerMatch'
      ldapOrderingRule: 'integerOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'smallint'
    sqlite:
      nativeType: 'INTEGER'
    tsql:
      nativeType: 'smallint'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: urn
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Uniform Resource Name'
    preql.tech/fullPluralName: 'Uniform Resource Name'
    preql.tech/standard: 'true'
    preql.tech/category: 'Identifiers'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    # preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    preql.tech/definingSpecification: 'IETF RFC 8141'
    preql.tech/definingSpecificationURI: 'https://datatracker.ietf.org/doc/rfc8141/'
    preql.tech/exampleValue: 'urn:uuid:ab16b997-659c-446f-bf22-af65af22c06b'
spec:
  jsonEquivalent: 'string'
  minLength: 1
  # Though a URI has no length limitation, 512 is really large and is still
  # within a length that permits indexing for most relational DBMSs.
  maxLength: 512
  regexes:
    pcre:
      urn:
      - pattern: '^urn:'
        positive: True
  setters:
    - type: 'case'
      casing: 'lower'
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'keyword'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'VARCHAR(512)'
    mysql:
      nativeType: 'VARCHAR(512)'
    openldap:
      # TODO: REVIEW: Make this IA5String?
      nativeType: '1.3.6.1.4.1.1466.115.121.1.15'
      ldapMatchingRule: 'caseIgnoreMatch'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
      ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'VARCHAR2(512 CHAR)'
    postgresql:
      nativeType: 'varchar(512)'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'VARCHAR(512)'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: varchar64
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Variable-length 64-character string'
    preql.tech/fullPluralName: 'Variable-length 64-character strings'
    preql.tech/standard: 'true'
    preql.tech/category: 'String'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A string that can contain up to 64 characters.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: 'NETWORKING_ERROR_TCP_CONNECTION_WAS_RESET_BY_REMOTE_HOST'
spec:
  jsonEquivalent: 'string'
  minLength: 0
  maxLength: 64
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'keyword'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'VARCHAR(64)'
    mysql:
      nativeType: 'VARCHAR(64)'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.15'
      ldapMatchingRule: 'caseIgnoreMatch'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
      ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'VARCHAR2(64 CHAR)'
    postgresql:
      nativeType: 'varchar(64)'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'NVARCHAR(64)'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: blob24
  namespace: default
  labels:
    preql.tech/fullSingularName: '24-bit Length Indicator Blob'
    preql.tech/fullPluralName: '24-bit Length Indicator Blobs'
    preql.tech/standard: 'true'
    preql.tech/category: 'Binary'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'Variable-length bytes array whose length is indicated by an 24-bit unsigned integer.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    # preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  minLength: 0
  maxLength: 16777215
  targets:
    bson:
      nativeType: 'binData'
    cql:
      nativeType: 'blob'
    elasticsearch:
      nativeType: 'binary'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'BLOB'
    mysql:
      nativeType: 'BLOB'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.40'
      ldapMatchingRule: 'octetStringMatch'
      ldapOrderingRule: 'octetStringOrderingMatch'
    plsql:
      nativeType: 'BLOB'
    postgresql:
      nativeType: 'bytea'
    sqlite:
      nativeType: 'BLOB'
    tsql:
      nativeType: 'binary'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: ureal32
  namespace: default
  labels:
    preql.tech/fullSingularName: '32-Bit Unsigned Floating-Point Number'
    preql.tech/fullPluralName: '32-Bit Unsigned Floating-Point Numbers'
    preql.tech/standard: 'true'
    preql.tech/category: 'FloatingPoint'
    preql.tech/storageSizeInBytes: '4'
    preql.tech/bits: '32'
    preql.tech/signed: 'false'
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'An unsigned floating-point number that can be encoded on 32 bits.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '4.56'
spec:
  jsonEquivalent: 'number'
  targets:
    bson:
      nativeType: 'number'
    cql:
      nativeType: 'double'
    elasticsearch:
      nativeType: 'double'
    json:
      nativeType: 'number'
    mariadb:
      nativeType: 'FLOAT UNSIGNED'
    mysql:
      nativeType: 'FLOAT UNSIGNED'
    # Unfortunately, OpenLDAP does not seem to support the ASN.1 REAL
    # type for whatever reason, so we have to use a string type to
    # represent numbers that can be non-integral, such as:
    # - 123
    # - 1.23
    # - 1.23 * 10^-1
    # - 1.23E-1
    # - +4.56
    # - Infinity
    # - -Infinity
    # - NaN
    # - 5 + 3i
    # - PI
    # - 5 / 3
    #
    # Hence, I have chosen PrintableString.
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.44'
      ldapMatchingRule: 'caseIgnoreIA5Match'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'double'
    sqlite:
      nativeType: 'REAL'
    tsql:
      nativeType: 'double'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: nucleotide
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: dnsRecordType
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: binchar8
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: ipv6
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  minLength: 2 # For the IPv6 address '::'
  maxLength: 39 # For the longest IPv6 address.
  regexes:
    pcre:
      ipv6:
        # Source: https://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses
        - pattern: '^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))'
          positive: True
  setters:
    - type: 'case'
      casing: 'upper'
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'keyword'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'VARCHAR(39)'
    mysql:
      nativeType: 'VARCHAR(39)'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.15'
      ldapMatchingRule: 'caseIgnoreMatch'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
      ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'VARCHAR2(39 CHAR)'
    postgresql:
      nativeType: 'inet'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'VARCHAR(39)'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: day
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Day'
    preql.tech/fullPluralName: 'Days'
    preql.tech/standard: 'true'
    preql.tech/category: 'Time'
    preql.tech/storageSizeInBytes: '1'
    preql.tech/bits: '8'
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A numerical representation of the day of the month on a Gregorian calendar, between 1 and 31.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '15'
spec:
  jsonEquivalent: 'integer'
  minimum: 1
  maximum: 31
  targets:
    bson:
      nativeType: 'integer'
    cql:
      nativeType: 'int'
    elasticsearch:
      nativeType: 'integer'
    json:
      nativeType: 'integer'
    mariadb:
      nativeType: 'TINYINT UNSIGNED'
    mysql:
      nativeType: 'TINYINT UNSIGNED'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.27'
      ldapMatchingRule: 'integerMatch'
      ldapOrderingRule: 'integerOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'smallint'
    sqlite:
      nativeType: 'INTEGER'
    tsql:
      nativeType: 'smallint'

---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: ftpCode
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: sint16
  namespace: default
  labels:
    preql.tech/fullSingularName: '16-Bit Signed Integer'
    preql.tech/fullPluralName: '16-Bit Signed Integers'
    preql.tech/standard: 'true'
    preql.tech/category: 'Integer'
    preql.tech/storageSizeInBytes: '2'
    preql.tech/bits: '16'
    preql.tech/signed: 'true'
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A signed integer that can range between -32,768 and 32,767.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '-32,760'
spec:
  jsonEquivalent: 'integer'
  minimum: -32768
  maximum: 32767
  targets:
    bson:
      nativeType: 'integer'
    cql:
      nativeType: 'int'
    elasticsearch:
      nativeType: 'integer'
    json:
      nativeType: 'integer'
    mariadb:
      nativeType: 'SMALLINT'
    mysql:
      nativeType: 'SMALLINT'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.27'
      ldapMatchingRule: 'integerMatch'
      ldapOrderingRule: 'integerOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'smallint'
    sqlite:
      nativeType: 'INTEGER'
    tsql:
      nativeType: 'smallint'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: json
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: fahrenheit
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: hexchar8
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: hexchar32
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: printerColor
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: mac
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: interfaceName
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: race
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: smtpCode
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: longitude
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: uint16
  namespace: default
  labels:
    preql.tech/fullSingularName: '16-Bit Unsigned Integer'
    preql.tech/fullPluralName: '16-Bit Unsigned Integers'
    preql.tech/standard: 'true'
    preql.tech/category: 'Integer'
    preql.tech/storageSizeInBytes: '2'
    preql.tech/bits: '16'
    preql.tech/signed: 'false'
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'An unsigned integer that can range between 0 and 65535.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '12345'
spec:
  jsonEquivalent: 'integer'
  minimum: 0
  maximum: 65535
  targets:
    bson:
      nativeType: 'integer'
    cql:
      nativeType: 'int'
    elasticsearch:
      nativeType: 'integer'
    json:
      nativeType: 'integer'
    mariadb:
      nativeType: 'SMALLINT UNSIGNED'
    mysql:
      nativeType: 'SMALLINT UNSIGNED'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.27'
      ldapMatchingRule: 'integerMatch'
      ldapOrderingRule: 'integerOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'smallint'
    sqlite:
      nativeType: 'INTEGER'
    tsql:
      nativeType: 'smallint'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: hexchar64
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: gtin
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: uint8
  namespace: default
  labels:
    preql.tech/fullSingularName: '8-Bit Unsigned Integer'
    preql.tech/fullPluralName: '8-Bit Unsigned Integers'
    preql.tech/standard: 'true'
    preql.tech/category: 'Integer'
    preql.tech/storageSizeInBytes: '1'
    preql.tech/bits: '8'
    preql.tech/signed: 'false'
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'An unsigned integer that can range between 0 and 255.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '224'
spec:
  jsonEquivalent: 'integer'
  minimum: 0
  maximum: 255
  targets:
    bson:
      nativeType: 'integer'
    cql:
      nativeType: 'int'
    elasticsearch:
      nativeType: 'integer'
    json:
      nativeType: 'integer'
    mariadb:
      nativeType: 'TINYINT UNSIGNED'
    mysql:
      nativeType: 'TINYINT UNSIGNED'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.27'
      ldapMatchingRule: 'integerMatch'
      ldapOrderingRule: 'integerOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'smallint'
    sqlite:
      nativeType: 'INTEGER'
    tsql:
      nativeType: 'tinyint'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: geoCode
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: uri
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Uniform Resource Locator'
    preql.tech/fullPluralName: 'Uniform Resource Locators'
    preql.tech/standard: 'true'
    preql.tech/category: 'Identifiers'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    # preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    preql.tech/definingSpecification: 'IETF RFC 1738'
    preql.tech/definingSpecificationURI: 'https://tools.ietf.org/html/rfc1738'
    preql.tech/exampleValue: 'https://github.com/JonathanWilbur'
spec:
  jsonEquivalent: 'string'
  minLength: 1
  # Though a URL has no length limitation, 512 is really large and is still
  # within a length that permits indexing for most relational DBMSs.
  maxLength: 512
  regexes:
    pcre:
      url:
      # Source: http://jmrware.com/articles/2009/uri_regexp/URI_regex.html
      - pattern: >-
          [A-Za-z][A-Za-z0-9+\-.]*:(?:(?:(?:[A-Za-z0-9\-._~!$&'()*+,;=:]|%[0-9A-Fa-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9A-Fa-f]{1,4}:){6}|::(?:[0-9A-Fa-f]{1,4}:){5}|(?:[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,1}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){3}|(?:(?:[0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){2}|(?:(?:[0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:|(?:(?:[0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})?::)(?:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(?:(?:[0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})?::)|[Vv][0-9A-Fa-f]+\.[A-Za-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|(?:[A-Za-z0-9\-._~!$&'()*+,;=]|%[0-9A-Fa-f]{2})*)(?::[0-9]*)?(?:/(?:[A-Za-z0-9\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|/(?:(?:[A-Za-z0-9\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:/(?:[A-Za-z0-9\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*)?|(?:[A-Za-z0-9\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:/(?:[A-Za-z0-9\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|)(?:\?(?:[A-Za-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9A-Fa-f]{2})*)?(?:\#(?:[A-Za-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9A-Fa-f]{2})*)?
        positive: True
  setters:
    - type: 'case'
      casing: 'lower'
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'keyword'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'VARCHAR(512)'
    mysql:
      nativeType: 'VARCHAR(512)'
    openldap:
      # TODO: REVIEW: Make this IA5String?
      nativeType: '1.3.6.1.4.1.1466.115.121.1.15'
      ldapMatchingRule: 'caseIgnoreMatch'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
      ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'VARCHAR2(512 CHAR)'
    postgresql:
      nativeType: 'varchar(512)'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'VARCHAR(512)'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: time
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: timeZone
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: ureal64
  namespace: default
  labels:
    preql.tech/fullSingularName: '64-Bit Unsigned Floating-Point Number'
    preql.tech/fullPluralName: '64-Bit Unsigned Floating-Point Numbers'
    preql.tech/standard: 'true'
    preql.tech/category: 'FloatingPoint'
    preql.tech/storageSizeInBytes: '8'
    preql.tech/bits: '64'
    preql.tech/signed: 'false'
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'An unsigned floating-point number that can be encoded on 64 bits.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '6.78'
spec:
  jsonEquivalent: 'number'
  targets:
    mariadb:
      nativeType: 'DOUBLE UNSIGNED'
    mysql:
      nativeType: 'DOUBLE UNSIGNED'
    # Unfortunately, OpenLDAP does not seem to support the ASN.1 REAL
    # type for whatever reason, so we have to use a string type to
    # represent numbers that can be non-integral, such as:
    # - 123
    # - 1.23
    # - 1.23 * 10^-1
    # - 1.23E-1
    # - +4.56
    # - Infinity
    # - -Infinity
    # - NaN
    # - 5 + 3i
    # - PI
    # - 5 / 3
    #
    # Hence, I have chosen PrintableString.
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.44'
      ldapMatchingRule: 'caseIgnoreIA5Match'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: yaml
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: degrees
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: fqdn
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: varchar16
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Variable-length 16-character string'
    preql.tech/fullPluralName: 'Variable-length 16-character strings'
    preql.tech/standard: 'true'
    preql.tech/category: 'String'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A string that can contain up to 16 characters.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: 'ERR_CONXN_RESET'
spec:
  jsonEquivalent: 'string'
  minLength: 0
  maxLength: 16
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'keyword'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'VARCHAR(16)'
    mysql:
      nativeType: 'VARCHAR(16)'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.15'
      ldapMatchingRule: 'caseIgnoreMatch'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
      ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'VARCHAR2(16 CHAR)'
    postgresql:
      nativeType: 'varchar(16)'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'NVARCHAR(16)'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: element
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: varchar8
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Variable-length 8-character string'
    preql.tech/fullPluralName: 'Variable-length 8-character strings'
    preql.tech/standard: 'true'
    preql.tech/category: 'String'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A string that can contain up to 8 characters.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: 'ECONNRST'
spec:
  jsonEquivalent: 'string'
  minLength: 0
  maxLength: 8
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'keyword'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'VARCHAR(8)'
    mysql:
      nativeType: 'VARCHAR(8)'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.15'
      ldapMatchingRule: 'caseIgnoreMatch'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
      ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'VARCHAR2(8 CHAR)'
    postgresql:
      nativeType: 'varchar(8)'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'NVARCHAR(8)'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: text16
  namespace: default
  labels:
    preql.tech/fullSingularName: '16-bit Length Indicator Text'
    preql.tech/fullPluralName: '16-bit Length Indicator Text'
    preql.tech/standard: 'true'
    preql.tech/category: 'String'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'Variable-length string whose length is indicated by an 16-bit unsigned integer.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: 'Hello world!'
spec:
  jsonEquivalent: 'string'
  minLength: 0
  maxLength: 65535
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'text'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'TEXT'
    mysql:
      nativeType: 'TEXT'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.15'
      ldapMatchingRule: 'caseIgnoreMatch'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
      ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'LONG'
    postgresql:
      nativeType: 'varchar(65535)'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'ntext'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: kelvins
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: ip
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Internet Protocol Address'
    preql.tech/fullPluralName: 'Internet Protocol Addresses'
    preql.tech/standard: 'true'
    preql.tech/category: 'Identifiers'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'Internet Protocol Addresses, both version 4 and version 6.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '127.0.0.1'
spec:
  jsonEquivalent: 'string'
  minLength: 2 # For the IPv6 address '::'
  maxLength: 39 # For the longest IPv6 address.
  regexes:
    pcre:
      ipv4:
        - pattern: '^(0|(?:1\\d)|(?:1\\d\\d)|(?:2[0-4]\\d)|(?:25[0-5]))(?:\\.(0|(?:1\\d)|(?:1\\d\\d)|(?:2[0-4]\\d)|(?:25[0-5]))){3}'
          positive: True
      ipv6:
        # Source: https://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses
        - pattern: '^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))'
          positive: True
  setters:
    - type: 'case'
      casing: 'upper'
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'keyword'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'VARCHAR(39)'
    mysql:
      nativeType: 'VARCHAR(39)'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.15'
      ldapMatchingRule: 'caseIgnoreMatch'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
      ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'VARCHAR2(39 CHAR)'
    postgresql:
      nativeType: 'inet'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'VARCHAR(39)'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: doi
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: decchar64
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: phone
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: binchar128
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: sint8
  namespace: default
  labels:
    preql.tech/fullSingularName: '8-Bit Signed Integer'
    preql.tech/fullPluralName: '8-Bit Signed Integers'
    preql.tech/standard: 'true'
    preql.tech/category: 'Integer'
    preql.tech/storageSizeInBytes: '1'
    preql.tech/bits: '8'
    preql.tech/signed: 'true'
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A signed integer that can range between -128 and 127.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '224'
spec:
  jsonEquivalent: 'integer'
  minimum: -128
  maximum: 127
  targets:
    bson:
      nativeType: 'integer'
    cql:
      nativeType: 'int'
    elasticsearch:
      nativeType: 'integer'
    json:
      nativeType: 'integer'
    mariadb:
      nativeType: 'TINYINT'
    mysql:
      nativeType: 'TINYINT'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.27'
      ldapMatchingRule: 'integerMatch'
      ldapOrderingRule: 'integerOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'smallint'
    sqlite:
      nativeType: 'INTEGER'
    tsql:
      nativeType: 'smallint'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: irl
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Universal Resource Locator'
    preql.tech/fullPluralName: 'Universal Resource Locators'
    preql.tech/standard: 'true'
    preql.tech/category: 'Identifiers'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    # preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: 'https://github.com/JonathanWilbur'
spec:
  jsonEquivalent: 'string'
  minLength: 0
  # Though a URL has no length limitation, 512 is really large and is still
  # within a length that permits indexing for most relational DBMSs.
  maxLength: 512
  regexes:
    pcre:
      irl:
      # Source: https://stackoverflow.com/a/190405/6562635
      - pattern: >-
          ^[a-z](?:[-a-z0-9\+\.])*:(?:\/\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:])*@)?(?:\[(?:(?:(?:[0-9a-f]{1,4}:){6}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|::(?:[0-9a-f]{1,4}:){5}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|v[0-9a-f]+\.[-a-z0-9\._~!\$&'\(\)\*\+,;=:]+)\]|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3}|(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=])*)(?::[0-9]*)?(?:\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@]))*)*|\/(?:(?:(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@]))+)(?:\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@]))*)*)?|(?:(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@]))+)(?:\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@]))*)*|(?!(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@])))(?:\?(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@])|[\x{E000}-\x{F8FF}\x{F0000}-\x{FFFFD}\x{100000}-\x{10FFFD}\/\?])*)?(?:\#(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@])|[\/\?])*)?
        positive: True
  setters:
    - type: 'case'
      casing: 'lower'
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'keyword'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'VARCHAR(512)'
    mysql:
      nativeType: 'VARCHAR(512)'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.15'
      ldapMatchingRule: 'caseIgnoreMatch'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
      ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'VARCHAR2(512 CHAR)'
    postgresql:
      nativeType: 'varchar(512)'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'NVARCHAR(512)'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: millisecond
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Millisecond'
    preql.tech/fullPluralName: 'Milliseconds'
    preql.tech/standard: 'true'
    preql.tech/category: 'Time'
    preql.tech/storageSizeInBytes: '2'
    preql.tech/bits: '16'
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'The milliseconds within a 1000-millisecond second.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '599'
spec:
  jsonEquivalent: 'integer'
  minimum: 0
  maximum: 999
  targets:
    bson:
      nativeType: 'integer'
    cql:
      nativeType: 'int'
    elasticsearch:
      nativeType: 'integer'
    json:
      nativeType: 'integer'
    mariadb:
      nativeType: 'TINYINT UNSIGNED'
    mysql:
      nativeType: 'TINYINT UNSIGNED'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.27'
      ldapMatchingRule: 'integerMatch'
      ldapOrderingRule: 'integerOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'smallint'
    sqlite:
      nativeType: 'INTEGER'
    tsql:
      nativeType: 'smallint'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: decchar128
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: binchar64
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: sreal16
  namespace: default
  labels:
    preql.tech/fullSingularName: '16-Bit Signed Floating-Point Number'
    preql.tech/fullPluralName: '16-Bit Signed Floating-Point Numbers'
    preql.tech/standard: 'true'
    preql.tech/category: 'FloatingPoint'
    preql.tech/storageSizeInBytes: '2'
    preql.tech/bits: '16'
    preql.tech/signed: 'true'
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A signed floating-point number that can be encoded on 16 bits.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '-1.5'
spec:
  jsonEquivalent: 'number'
  targets:
    bson:
      nativeType: 'number'
    cql:
      nativeType: 'float'
    elasticsearch:
      nativeType: 'half_float'
    json:
      nativeType: 'number'
    mariadb:
      nativeType: 'FLOAT SIGNED'
    mysql:
      nativeType: 'FLOAT SIGNED'
    # Unfortunately, OpenLDAP does not seem to support the ASN.1 REAL
    # type for whatever reason, so we have to use a string type to
    # represent numbers that can be non-integral, such as:
    # - 123
    # - 1.23
    # - 1.23 * 10^-1
    # - 1.23E-1
    # - +4.56
    # - Infinity
    # - -Infinity
    # - NaN
    # - 5 + 3i
    # - PI
    # - 5 / 3
    #
    # Hence, I have chosen PrintableString.
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.44'
      ldapMatchingRule: 'caseIgnoreIA5Match'
      ldapOrderingRule: 'caseIgnoreOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'real'
    sqlite:
      nativeType: 'REAL'
    tsql:
      nativeType: 'float'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: iso3166-2
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: html
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: iso3166-3
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: blob8
  namespace: default
  labels:
    preql.tech/fullSingularName: '8-bit Length Indicator Blob'
    preql.tech/fullPluralName: '8-bit Length Indicator Blobs'
    preql.tech/standard: 'true'
    preql.tech/category: 'Binary'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'Variable-length bytes array whose length is indicated by an 8-bit unsigned integer.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    # preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  minLength: 0
  maxLength: 255
  targets:
    bson:
      nativeType: 'binData'
    cql:
      nativeType: 'blob'
    elasticsearch:
      nativeType: 'binary'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'TINYBLOB'
    mysql:
      nativeType: 'TINYBLOB'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.40'
      ldapMatchingRule: 'octetStringMatch'
      ldapOrderingRule: 'octetStringOrderingMatch'
    plsql:
      nativeType: 'BLOB'
    postgresql:
      nativeType: 'bytea'
    sqlite:
      nativeType: 'BLOB'
    tsql:
      nativeType: 'binary(255)'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: binchar32
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: email
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: uuid
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Universally-Unique Identifier'
    preql.tech/fullPluralName: 'Universally-Unique Identifiers'
    preql.tech/standard: 'true'
    preql.tech/category: 'Identifiers'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A Universally-Unique Identifier.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '8747f03d-0566-4f54-b787-ac80fda72a8d'
spec:
  jsonEquivalent: 'string'
  minLength: 36
  maxLength: 36
  regexes:
    pcre:
      uuid:
        - pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}'
          positive: True
  setters:
    - type: 'case'
      casing: 'upper'
  targets:
    bson:
      nativeType: 'string'
    cql:
      nativeType: 'text'
    elasticsearch:
      nativeType: 'keyword'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'CHAR(36)'
    mysql:
      nativeType: 'CHAR(36)'
    openldap:
      nativeType: '1.3.6.1.1.16.1' # https://tools.ietf.org/html/rfc4530#section-2.1
      ldapMatchingRule: 'uuidMatch'
      ldapOrderingRule: 'uuidOrderingMatch'
      # nativeType: '1.3.6.1.4.1.1466.115.121.1.44'
      # ldapMatchingRule: 'caseIgnoreMatch'
      # ldapOrderingRule: 'caseIgnoreOrderingMatch'
      # ldapSubstringMatchingRule: 'caseIgnoreSubstringsMatch'
    plsql:
      nativeType: 'CHAR(36 CHAR)'
    postgresql:
      nativeType: 'char(36)'
    sqlite:
      nativeType: 'TEXT'
    tsql:
      nativeType: 'NCHAR(36)'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: celcius
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: decchar32
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: upDown
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: minute
  namespace: default
  labels:
    preql.tech/fullSingularName: 'Minute'
    preql.tech/fullPluralName: 'Minutes'
    preql.tech/standard: 'true'
    preql.tech/category: 'Time'
    preql.tech/storageSizeInBytes: '1'
    preql.tech/bits: '8'
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'A minute within a 60-minute hour.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: '15'
spec:
  jsonEquivalent: 'integer'
  minimum: 0
  maximum: 59
  targets:
    bson:
      nativeType: 'integer'
    cql:
      nativeType: 'int'
    elasticsearch:
      nativeType: 'integer'
    json:
      nativeType: 'integer'
    mariadb:
      nativeType: 'TINYINT UNSIGNED'
    mysql:
      nativeType: 'TINYINT UNSIGNED'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.27'
      ldapMatchingRule: 'integerMatch'
      ldapOrderingRule: 'integerOrderingMatch'
    plsql:
      nativeType: 'NUMBER'
    postgresql:
      nativeType: 'smallint'
    sqlite:
      nativeType: 'INTEGER'
    tsql:
      nativeType: 'smallint'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: blob16
  namespace: default
  labels:
    preql.tech/fullSingularName: '16-bit Length Indicator Blob'
    preql.tech/fullPluralName: '16-bit Length Indicator Blobs'
    preql.tech/standard: 'true'
    preql.tech/category: 'Binary'
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: 'Variable-length bytes array whose length is indicated by an 16-bit unsigned integer.'
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    # preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  minLength: 0
  maxLength: 65535
  targets:
    bson:
      nativeType: 'binData'
    cql:
      nativeType: 'blob'
    elasticsearch:
      nativeType: 'binary'
    json:
      nativeType: 'string'
    mariadb:
      nativeType: 'BLOB'
    mysql:
      nativeType: 'BLOB'
    openldap:
      nativeType: '1.3.6.1.4.1.1466.115.121.1.40'
      ldapMatchingRule: 'octetStringMatch'
      ldapOrderingRule: 'octetStringOrderingMatch'
    plsql:
      nativeType: 'BLOB'
    postgresql:
      nativeType: 'bytea'
    sqlite:
      nativeType: 'BLOB'
    tsql:
      nativeType: 'binary(65535)'
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: id
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: personName
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: hexchar128
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
---
apiVersion: preq/1.0.0
kind: DataType
metadata:
  name: mla
  namespace: default
  labels:
    preql.tech/fullSingularName: ''
    preql.tech/fullPluralName: ''
    preql.tech/standard: 'true'
    preql.tech/category: ''
    # preql.tech/storageSizeInBytes: ''
    # preql.tech/bits: ''
    # preql.tech/signed: ''
    # preql.tech/country: ''
    # preql.tech/objectIdentifier: ''
    # preql.tech/uuid: ''
  annotations:
    preql.tech/description: ''
    preql.tech/author: 'Jonathan M. Wilbur'
    preql.tech/authorEmailAddress: 'jonathan@wilbur.space'
    # preql.tech/definingSpecification: ''
    # preql.tech/definingSpecificationURI: ''
    preql.tech/exampleValue: ''
spec:
  jsonEquivalent: 'string'
  # name:
  # values:
  # minimum: 0
  # maximum: 1
  # minLength: 0
  # maxLength: 1
  # regexes:
  #   pcre:
  # setters:
  #   - type:
  targets: {}
